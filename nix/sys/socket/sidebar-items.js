initSidebarItems({"constant":[["AF_INET",""],["AF_INET6",""],["AF_LOCAL",""],["AF_UNIX",""],["INADDR_ANY",""],["INADDR_BROADCAST",""],["INADDR_NONE",""],["IPPROTO_IP",""],["IPPROTO_IPV6",""],["IPPROTO_TCP",""],["IPPROTO_UDP",""],["IPV6_ADD_MEMBERSHIP",""],["IPV6_DROP_MEMBERSHIP",""],["IP_ADD_MEMBERSHIP",""],["IP_DROP_MEMBERSHIP",""],["IP_MULTICAST_IF",""],["IP_MULTICAST_LOOP",""],["IP_MULTICAST_TTL",""],["MSG_DONTWAIT",""],["MSG_OOB",""],["MSG_PEEK",""],["SHUT_RD",""],["SHUT_RDWR",""],["SHUT_WR",""],["SOCK_CLOEXEC",""],["SOCK_DGRAM",""],["SOCK_NONBLOCK",""],["SOCK_RAW",""],["SOCK_RDM",""],["SOCK_SEQPACKET",""],["SOCK_STREAM",""],["SOL_IP",""],["SOL_IPV6",""],["SOL_SOCKET",""],["SOL_TCP",""],["SOL_UDP",""],["SO_ACCEPTCONN",""],["SO_BINDTODEVICE",""],["SO_BROADCAST",""],["SO_BSDCOMPAT",""],["SO_BUSY_POLL",""],["SO_DEBUG",""],["SO_DOMAIN",""],["SO_DONTROUTE",""],["SO_ERROR",""],["SO_KEEPALIVE",""],["SO_LINGER",""],["SO_MARK",""],["SO_OOBINLINE",""],["SO_PASSCRED",""],["SO_PEEK_OFF",""],["SO_PEERCRED",""],["SO_PRIORITY",""],["SO_PROTOCOL",""],["SO_RCVBUF",""],["SO_RCVBUFFORCE",""],["SO_RCVLOWAT",""],["SO_RCVTIMEO",""],["SO_REUSEADDR",""],["SO_REUSEPORT",""],["SO_RXQ_OVFL",""],["SO_SNDBUF",""],["SO_SNDBUFFORCE",""],["SO_SNDLOWAT",""],["SO_SNDTIMEO",""],["SO_TIMESTAMP",""],["SO_TYPE",""],["TCP_CORK",""],["TCP_KEEPIDLE",""],["TCP_MAXSEG",""],["TCP_NODELAY",""]],"enum":[["AddressFamily",""],["InetAddr",""],["IpAddr",""],["Shutdown",""],["SockAddr","Represents a socket address"],["SockLevel","The protocol level at which to get / set socket options. Used as an argument to `getsockopt` and `setsockopt`."],["SockType",""]],"fn":[["accept","Accept a connection on a socket"],["accept4","Accept a connection on a socket"],["bind","Bind a name to a socket"],["connect","Initiate a connection on a socket"],["getpeername","Get the address of the peer connected to the socket `fd`."],["getsockname","Get the current address to which the socket `fd` is bound."],["getsockopt","Get the current value for the requested socket option"],["listen","Listen for connections on a socket"],["recv","Receive data from a connection-oriented socket. Returns the number of bytes read"],["recvfrom","Receive data from a connectionless or connection-oriented socket. Returns the number of bytes read and the socket address of the sender."],["send","Send data to a connection-oriented socket. Returns the number of bytes read"],["sendto",""],["setsockopt","Sets the value for the requested socket option"],["shutdown","Shut down part of a full-duplex connection."],["sockaddr_storage_to_addr",""],["socket","Create an endpoint for communication"],["socketpair","Create a pair of connected sockets"]],"mod":[["sockopt",""]],"struct":[["Ipv4Addr",""],["Ipv6Addr",""],["SockFlag",""],["UnixAddr",""],["in6_addr",""],["in_addr",""],["ip_mreq",""],["ipv6_mreq",""],["linger",""],["sockaddr",""],["sockaddr_in",""],["sockaddr_in6",""],["sockaddr_storage",""],["sockaddr_un",""]],"trait":[["GetSockOpt","Represents a socket option that can be accessed or set. Used as an argument to `getsockopt`"],["SetSockOpt","Represents a socket option that can be accessed or set. Used as an argument to `setsockopt`"]],"type":[["InAddrT",""],["IpMulticastTtl",""],["SockMessageFlags",""],["sa_family_t",""]]});